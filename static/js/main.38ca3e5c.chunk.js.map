{"version":3,"sources":["App.js","index.js"],"names":["App","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","useEffect","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAkDeA,MAhDf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MAFb,EAGqBE,oBAAS,GAH9B,mBAGNC,EAHM,KAGKC,EAHL,KAsCb,OAjCAC,qBAAU,WACR,IAAMC,EAASP,EAAUQ,QACzBD,EAAOE,MAA4B,EAApBC,OAAOC,WACtBJ,EAAOK,OAA8B,EAArBF,OAAOG,YAEvBN,EAAOO,MAAML,MAAb,UAAwBC,OAAOC,WAA/B,MACAJ,EAAOO,MAAMF,OAAb,UAAyBF,OAAOG,YAAhC,MAEA,IAAME,EAAUR,EAAOS,WAAW,MAClCD,EAAQE,MAAM,EAAG,GACjBF,EAAQG,QAAU,QAClBH,EAAQI,YAAc,QACtBJ,EAAQK,UAAY,EACpBlB,EAAWM,QAAUO,IACpB,IAoBD,4BACEM,YAnBiB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACdC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBtB,EAAWM,QAAQiB,YACnBvB,EAAWM,QAAQkB,OAAOH,EAASC,GACnCnB,GAAa,IAgBXsB,UAdkB,WACpBzB,EAAWM,QAAQoB,YACnBvB,GAAa,IAaXwB,YAXS,SAAC,GAAqB,IAAnBP,EAAkB,EAAlBA,YACd,GAAKlB,EAAL,CADgC,IAExBmB,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBtB,EAAWM,QAAQsB,OAAOP,EAASC,GACnCtB,EAAWM,QAAQuB,WAQjBC,IAAKhC,KCxCXiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.38ca3e5c.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n\n  return (\n    <canvas\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={draw}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}